<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Country extends \App\Entity\Country implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countrycode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countryid', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'continentid', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'hidden', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countrylist', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'lat', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'lng', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'citizens', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'dateadded', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'dateupdated', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'casinos', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'bonuses', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'restrictedsoftware', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'group', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'casinosHaveJurisdiction', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'jurisdictionCheck', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'imgSrc', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'childCountry'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countrycode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countryid', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'continentid', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'hidden', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countrylist', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'lat', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'lng', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'citizens', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'dateadded', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'dateupdated', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'casinos', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'bonuses', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'restrictedsoftware', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'group', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'casinosHaveJurisdiction', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'jurisdictionCheck', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'imgSrc', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'childCountry'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Country $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setHidden($hidden): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHidden', [$hidden]);

        parent::setHidden($hidden);
    }

    /**
     * {@inheritDoc}
     */
    public function getHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHidden', []);

        return parent::getHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function getCountryCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountryCode', []);

        return parent::getCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountryCode($countrycode): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountryCode', [$countrycode]);

        parent::setCountryCode($countrycode);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLat', []);

        return parent::getLat();
    }

    /**
     * {@inheritDoc}
     */
    public function setLat($lat): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLat', [$lat]);

        parent::setLat($lat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCitizens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCitizens', []);

        return parent::getCitizens();
    }

    /**
     * {@inheritDoc}
     */
    public function setCitizens($citizens): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCitizens', [$citizens]);

        parent::setCitizens($citizens);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdded', []);

        return parent::getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdded($dateadded): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdded', [$dateadded]);

        parent::setDateAdded($dateadded);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdated', []);

        return parent::getDateUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdated($dateupdated): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdated', [$dateupdated]);

        parent::setDateUpdated($dateupdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getLng()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLng', []);

        return parent::getLng();
    }

    /**
     * {@inheritDoc}
     */
    public function setLng($lng): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLng', [$lng]);

        parent::setLng($lng);
    }

    /**
     * {@inheritDoc}
     */
    public function getContinentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContinentId', []);

        return parent::getContinentId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCountryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountryId', []);

        return parent::getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setContinentId($continentid): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContinentId', [$continentid]);

        parent::setContinentId($continentid);
    }

    /**
     * {@inheritDoc}
     */
    public function setCountryId($countryid): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountryId', [$countryid]);

        parent::setCountryId($countryid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCasinos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCasinos', []);

        return parent::getCasinos();
    }

    /**
     * {@inheritDoc}
     */
    public function addCasino(\App\Entity\Casino $casino)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCasino', [$casino]);

        return parent::addCasino($casino);
    }

    /**
     * {@inheritDoc}
     */
    public function getBonuses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBonuses', []);

        return parent::getBonuses();
    }

    /**
     * {@inheritDoc}
     */
    public function addBonus(\App\Entity\Bonus $bonus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBonus', [$bonus]);

        return parent::addBonus($bonus);
    }

    /**
     * {@inheritDoc}
     */
    public function getRestrictedsoftware()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRestrictedsoftware', []);

        return parent::getRestrictedsoftware();
    }

    /**
     * {@inheritDoc}
     */
    public function addRestrictedSoftware(\App\Entity\Software $software)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRestrictedSoftware', [$software]);

        return parent::addRestrictedSoftware($software);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroup', []);

        return parent::getGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroup(\App\Entity\CountryGroups $group): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroup', [$group]);

        parent::setGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountrylist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountrylist', []);

        return parent::getCountrylist();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountrylist($countrylist): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountrylist', [$countrylist]);

        parent::setCountrylist($countrylist);
    }

    /**
     * {@inheritDoc}
     */
    public function getCasinosHaveJurisdiction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCasinosHaveJurisdiction', []);

        return parent::getCasinosHaveJurisdiction();
    }

    /**
     * {@inheritDoc}
     */
    public function addCasinoHaveJurisdiction(\App\Entity\Casino $casino)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCasinoHaveJurisdiction', [$casino]);

        return parent::addCasinoHaveJurisdiction($casino);
    }

    /**
     * {@inheritDoc}
     */
    public function getJurisdictionCheck()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJurisdictionCheck', []);

        return parent::getJurisdictionCheck();
    }

    /**
     * {@inheritDoc}
     */
    public function setJurisdictionCheck($jurisdictionCheck): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJurisdictionCheck', [$jurisdictionCheck]);

        parent::setJurisdictionCheck($jurisdictionCheck);
    }

    /**
     * {@inheritDoc}
     */
    public function getImgSrc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImgSrc', []);

        return parent::getImgSrc();
    }

    /**
     * {@inheritDoc}
     */
    public function setImgSrc($imgSrc): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImgSrc', [$imgSrc]);

        parent::setImgSrc($imgSrc);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildCountry', []);

        return parent::getChildCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildCountry(\App\Entity\Country $childCountry): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildCountry', [$childCountry]);

        parent::setChildCountry($childCountry);
    }

}
