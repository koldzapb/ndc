<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BonusType extends \App\Entity\BonusType implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'id', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'name', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'priority', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'bonuses', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'imgsrc', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'bonusvaluepages', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'imagefile', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'imagelocation'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'id', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'name', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'priority', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'bonuses', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'imgsrc', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'bonusvaluepages', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'imagefile', '' . "\0" . 'App\\Entity\\BonusType' . "\0" . 'imagelocation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BonusType $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getBonuses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBonuses', []);

        return parent::getBonuses();
    }

    /**
     * {@inheritDoc}
     */
    public function addBonus(\App\Entity\Bonus $bonus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBonus', [$bonus]);

        return parent::addBonus($bonus);
    }

    /**
     * {@inheritDoc}
     */
    public function getImgsrc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImgsrc', []);

        return parent::getImgsrc();
    }

    /**
     * {@inheritDoc}
     */
    public function setImgsrc($imgsrc): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImgsrc', [$imgsrc]);

        parent::setImgsrc($imgsrc);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagefile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagefile', []);

        return parent::getImagefile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagefile($imagefile): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagefile', [$imagefile]);

        parent::setImagefile($imagefile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagelocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagelocation', []);

        return parent::getImagelocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagelocation($imagelocation): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagelocation', [$imagelocation]);

        parent::setImagelocation($imagelocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getBonusvaluepages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBonusvaluepages', []);

        return parent::getBonusvaluepages();
    }

    /**
     * {@inheritDoc}
     */
    public function addBonusValuePage(\App\Entity\BonusValue $bonusValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBonusValuePage', [$bonusValue]);

        return parent::addBonusValuePage($bonusValue);
    }

}
